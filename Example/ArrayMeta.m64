Array : type struct
	#T : #Type;
	n : int;
	use v : @[#N]#T;
end

func Erase(A : @Array, Condition : #Func(A.T) bool)
	n := 0;
	for i := 0; i < A.n; i++
		if !Condition(A[i])
			A[n] = v;
			n++;
		end
	end
	a.n = n;
end

#func Swap(T : #Type, A : T, B : T)
	tmp := A;
	A := B;
	B := tmp;
end

func Sort(A : @Array, CorrectOrder : #Func(A.T, A.T) bool)
	for i := 0; i < A.n - 1; i++:
		for j := i + 1; j < A.n; j++:
			if !CorrectOrder(A[i], A[j]):
				Swap(A.T, A[i], A[j]);
			end
		end
	end
end

func SortAllWays(A : @int, n : int, I : @int)
	AA : Array;
	AA.T = int;
	AA.n = n;
	AA.v = A;
	
	#func CmpFancy(a : int, b : int):
		return I[a] < I[b];
	end
	
	Sort(A, CmpFancy);
end